@page "/generator"

@rendermode InteractiveAuto
@using UserRegistry.Client.Models
@using Sve.Blazor.InfiniteScroll.Components
@using Csv
@using System.Text.Json
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@using System
@using System.Text

<PageTitle>User Registry</PageTitle>

<div class="container">
    <form class="row form-inline d-flex pb-3 justify-content-between">
        <div class="col-md-auto">
            <div class="row">
                <label class="col-md-auto col-form-label"
                       for="autoSizingSelect">Region:</label>
                <div class="col-md-auto">
                    <select @bind="@locale" @bind:event="oninput"
                            @onchange="InitializeGenerator" class="form-select"
                            id="autoSizingSelect">
                        @foreach (var item in Enum.GetValues(typeof(Countries)))
                        {
                            <option value="@locales[item.ToString()!]">
                                @item
                            </option>
                        }

                    </select>
                </div>
            </div>
        </div>
        <div class="col-md-auto d-flex align-self-center">
            <div class="row d-flex align-self-center">
                <label class="col-sm-2 col-form-label d-flex align-self-center"
                       for="autoSizingSelect1">Errors:</label>
                <span class="col d-flex align-self-center">
                    <input type="range" class="form-range" id="customRange1"
                           min="@errorMinValue" max="10" step="@errorValueStep"
                           @bind="errorValue" @bind:event="oninput"
                           @onchange="InitializeGenerator">
                </span>
                <span class="col d-flex align-self-center">
                    <input type="number" class="form-control"
                           @bind="@errorValue" @bind:event="oninput"
                           @onchange="InitializeGenerator" min="@errorMinValue"
                           max="1000" step="@errorValueStep"
                           placeholder="Error count" aria-label="Error count">
                </span>
            </div>
        </div>
        <div class="col-md-auto d-flex align-self-center justify-content-end">
            <div class="row d-flex align-self-center ">
                <label class="col-sm-2 col-form-label" for="autoSizingSelect1">
                    Seed:
                </label>
                <span class="col-md-auto d-flex align-self-center">
                    <input type="number" min="0" max="@seedMaxRandomValue"
                           class="form-control" @onchange="InitializeGenerator"
                           aria-label="Seed" @bind="UserSeed"
                           @bind:event="oninput" placeholder="Seed">
                </span>
                <span class="col d-flex align-self-center">
                    <button type="button" value="@UserSeed"
                            class="btn btn-outline-secondary"
                            @onclick="GenerateRandomSeed"
                            @onchange="InitializeGenerator">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16"
                             height="16" fill="currentColor"
                             class="bi bi-shuffle" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M0 3.5A.5.5 0 0 1 .5 3H1c2.202 0 3.827 1.24 4.874 2.418.49.552.865 1.102 1.126 1.532.26-.43.636-.98 1.126-1.532C9.173 4.24 10.798 3 13 3v1c-1.798 0-3.173 1.01-4.126 2.082A9.624 9.624 0 0 0 7.556 8a9.624 9.624 0 0 0 1.317 1.918C9.828 10.99 11.204 12 13 12v1c-2.202 0-3.827-1.24-4.874-2.418A10.595 10.595 0 0 1 7 9.05c-.26.43-.636.98-1.126 1.532C4.827 11.76 3.202 13 1 13H.5a.5.5 0 0 1 0-1H1c1.798 0 3.173-1.01 4.126-2.082A9.624 9.624 0 0 0 6.444 8a9.624 9.624 0 0 0-1.317-1.918C4.172 5.01 2.796 4 1 4H.5a.5.5 0 0 1-.5-.5" />
                            <path d="M13 5.466V1.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384l-2.36 1.966a.25.25 0 0 1-.41-.192zm0 9v-3.932a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384l-2.36 1.966a.25.25 0 0 1-.41-.192z" />
                        </svg>
                    </button>
                </span>
            </div>
        </div>
        <div class="col-md-auto d-flex align-self-end justify-content-between">
            <div class="row d-flex align-self-center">
                <span class="col d-flex align-self-center">
                    <button type="button" class="btn btn-secondary"
                            @onclick="@Download">
                        Export
                    </button>
                </span>
            </div>
        </div>
    </form>
</div>

<div class="container d-flex justify-content-between" style="height:1000px">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>#</th>
                <th>Guid</th>
                <th>Name</th>
                <th>Address</th>
                <th>Phone Number</th>
            </tr>
        </thead>
        <tbody>
            <InfiniteScroll ObserverTargetId="observerTarget"
                            ObservableTargetReached="(e) =>
                    GenerateChunkOfUsers()">
                <Virtualize Context="p" Items="@people" OverscanCount="10"
                            SpacerElement="tr" ItemSize="50">
                    <tr @key="p.Number">
                        <td>@people[p.Number - 1].Number</td>
                        <td>@people[p.Number - 1].Id</td>
                        <td>@people[p.Number - 1].Name</td>
                        <td>@people[p.Number - 1].Address</td>
                        <td>@people[p.Number - 1].Phone</td>
                    </tr>
                </Virtualize>
                <tr style="visibility:hidden" class="list-group-item"
                    id="observerTarget"></tr>
            </InfiniteScroll>
        </tbody>
    </table>
</div>

<script src="_content/Sve.Blazor.InfiniteScroll/js/Observer.js"></script>

<script>
    window.downloadFileFromStream = async (fileName, contentStreamReference) => {
        const arrayBuffer = await contentStreamReference.arrayBuffer();
        const blob = new Blob([arrayBuffer]);
        const url = URL.createObjectURL(blob);
        const anchorElement = document.createElement('a');
        anchorElement.href = url;
        if (fileName) {
            anchorElement.download = fileName;
        }

        anchorElement.click();
        anchorElement.remove();
        URL.revokeObjectURL(url);
    }
</script>
